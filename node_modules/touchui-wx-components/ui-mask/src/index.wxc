<template>
  <view class="ui-mask {{ effect }} {{ blurClass }} {{ selfShow ? 'show' : ''}}" style="{{ selfCustomStyle }}" bindtap="handleMaskTap">
    <view>
      <slot></slot>
    </view>
  </view>
</template>

<script>
import SystemHelper from '../../libs/SystemHelper'
import StyleHelper from '../../libs/StyleHelper'

export default {
  config: {
    usingComponents: { }
  },
  behaviors: [ ],
  properties: { 
    customStyle: {
      type: String | Object
    },
    show: {
      type: Boolean,
      observer (val) {
        if (val) {
          this.setData({
            selfShow: true
          })
        } else {
          if (this.data.hideDelay) {
            setTimeout(() => {
              this.setData({
                selfShow: false
              })
            }, this.data.hideDelay)
          } else {
            this.setData({
              selfShow: false
            })
          }
        }
      }
    },
    top: {
      type: Number | String,
      value: 0
    },
    effect: {
      type: String
    },
    hideDelay: {
      type: Number
    },
    hideOnTap: {
      type: Boolean,
      value: true
    },
    blur: {
      type: String
    }
  },
  ready () {
    let selfCustomStyle = StyleHelper.getMergedPlainStyles([{ top: this.data.top }, this.data.customStyle])
    let blurClass = ''
    let platform = SystemHelper.isIos()
    if (this.data.blur) {
      let platform = SystemHelper.isIos() ? 'ios' : 'android'
      blurClass = `blur-${this.data.blur}-${platform}`
    }
    this.setData({
      selfCustomStyle: selfCustomStyle,
      blurClass: blurClass
    })
  },
  data: { 
    selfShow: false,
    isInTimeout: false,
    blurClass: ''
  },
  methods: { 
    handleMaskTap () {
      if (this.data.hideOnTap) {
        this.setData({
          show: false
        })
      }
    }
  }
}


</script>

<style lang="less">
.ui-mask {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: rgba(0, 0, 0, 0.5);
  width: 100%;
  visibility: hidden;
  opacity: 0;
  transition: opacity .25s ease-in;
  -webkit-backface-visibility: hidden;
  z-index: 700;

  &.scale-out {
    transition: all .25s ease-in;
    transform: scale(0);

    &.show {
      transform: scale(1);
    }
  }

  &.scale-in {
    transition: all .25s ease-in;
    transform: scale(1.5);
    &.show {
      transform: scale(1);
    }
  }

  &.blur-dark-android {
    background: rgba(0, 0, 0, 0.85); //安卓
  }

  &.blur-dark-ios {
    background: rgba(0, 0, 0, 0.5); // IOS
    -webkit-backdrop-filter: blur(30px) saturate(180%);
  }

  &.blur-light-android {
    background: rgba(255, 255, 255, 0.96); //安卓
  }

  &.blur-light-ios {
    background: rgba(255, 255, 255, 0.8); // IOS
    -webkit-backdrop-filter: blur(30px) saturate(300%);
  }

  &.show {
    opacity: 1;
    visibility: visible;
  }
}
</style>
