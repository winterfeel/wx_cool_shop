<template>
  <view style="{{ selfStyle }}" class="ui-popup {{ show ? 'show' : '' }}" catchtouchmove="handleTouchMove" >
    <view style="{{ selfContentStyle }}" class="ui-popup-content {{ show ? 'show' : '' }} {{ position }}">
      <slot></slot>
    </view>
    <view style="{{ selfMaskStyle }}" class="ui-popup-mask {{ show ? 'show' : '' }}" bindtap="handleMaskTap"></view>
  </view>
</template>

<script>
import StyleHelper from '../../libs/StyleHelper'

export default {
  config: {
    usingComponents: { }
  },
  behaviors: [ ],
  properties: { 
    show: {
      type: Boolean,
      observer (val) {
        let eventName = val ? 'show' : 'hide'
        this.triggerEvent(eventName)

        if (!this.data.isInit) {
          setTimeout(() => {
            this.triggerEvent('init')
          }, 300)

          this.setData({
            isInit: true
          })
        }
      }
    },
    width: {
      type: Number | String
    },
    height: {
      type: Number | String
    },
    top: {
      type: Number | String,
      value: 0
    },
    showMask: {
      type: Boolean,
      value: true
    },
    maskStyle: {
      type: Object | String
    },
    hideOnBlur: {
      type: Boolean,
      value: true
    },
    position: {
      type: String,
      value: 'bottom'
    },
    maxHeight: String,
    background: {
      type: String
    },
    cropout: {
      type: Boolean
    }
  },
  data: { 
    isInit: false
  },
  ready () {
    let style = StyleHelper.getPlainStyle({
      top: this.data.top,
      height: this.data.height,
      width: this.data.width,
      background: this.data.background
    })

    let selfStyle = ''
    let selfContentStyle = ''

    if (this.data.cropout) {
      selfStyle = style
    } else {
      selfContentStyle = style
    }

    this.setData({
      selfStyle: selfStyle,
      selfContentStyle: selfContentStyle,
      selfMaskStyle: StyleHelper.getPlainStyle(this.data.maskStyle)
    })
  },
  methods: { 
    handleTouchMove (e) {
    },
    handleMaskTap (e) {
      if (this.data.hideOnBlur) {
        this.setData({
          show: false
        })
      }
    }
  }
}


</script>

<style lang="less">
.ui-popup {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  width: 100%;
  z-index: 501;
  transition-property: transform, visibility;
  transition-duration: 300ms;
  max-height: 100%;
  overflow-y: scroll;
  -webkit-backface-visibility: hidden;
  visibility: hidden;

  &.show {
    visibility: visible;
  }
}

.ui-popup-content {
  position: absolute;
  background-color: #fff;
  // pointer-events: none;

  &.bottom {
    bottom: 0;
    left: 0;
    width: 100%;
    transition: transform 300ms;
    transform: translate3d(0, 100%, 0);

    &.show {
      transform: translate3d(0, 0, 0);      
    }
  }

  &.top {
    top: 0;
    left: 0;
    width: 100%;
    animation: slideOut both .3s;
    transform-origin: 50% 0;

    &.show {
      animation: slideIn both .3s;
      transform-origin: 50% 0;
    }
  }

  &.left {
    width: auto;
    height: 100%;
    top: 0;
    right: auto;
    bottom: auto;
    left: 0;
    transition: transform 300ms;
    transform: translate3d(-100%, 0, 0);

    &.show {
      transform: translate3d(0, 0, 0);      
    }
  }

  &.right {
    height: 100%;
    top: 0;
    right: 0;
    bottom: auto;
    left: auto;
    transition: transform 300ms;
    transform: translate3d(100%, 0, 0);

    &.show {
      transform: translate3d(0, 0, 0); 
    }
  }
}

.ui-popup-mask {
  display: block;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  opacity: 0;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
  z-index: -1;
  transition: opacity 400ms;
}

.ui-popup-mask.show {
  opacity: 1;
}

.ui-popup-animate-top-enter-active {
  animation: slideIn both .3s;
  transform-origin: 50% 0;
}

.ui-popup-animate-top-leave-active {
  animation: slideOut both .3s;
  transform-origin: 50% 0;
}
@keyframes slideIn {
  0% {
    opacity: 0;
    transform: scaleY(0);
  }

  100% {
    opacity: 1;
    transform: scaleY(1);
  }
}
@keyframes slideOut {
  0% {
    opacity: 1;
    -webkit-transform: scaleY(1);
    transform: scaleY(1);
  }

  100% {
    opacity: 0;
    -webkit-transform: scaleY(0);
    transform: scaleY(0);
  }
}

</style>
