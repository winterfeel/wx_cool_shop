<template>
  <view class="ui-tags">
    <view class="ui-tag-item"
      wx:for="{{ data }}"
      wx:key="index"
      style="{{ itemStyle }}">
      <view style="{{ item.checked ? item.tagSelectedStyle : item.tagStyle }}" data-index="{{ index }}" bindtap="handleItemTap">
        <block wx:if="{{ item.badge }}">
          <span
            wx:for="item.badge"
            wx:for-item="badge"
            class="corner left {{ badge['badge-class']}}">
            {{ badge['badge-text'] }}
          </span>
        </block>
        <ui-icon 
          wx:if="{{ iconPosition === 'left' && item.icon && !item.checked }}"
          type="{{ item.icon }}" 
          size="{{ iconSize }}"
          color="{{ item.checked ? (item.iconSelectedColor ? item.iconSelectedColor : item.iconColor) : item.iconColor }}"
          class="left">
        </ui-icon>
        <ui-icon
          wx:if="{{ iconPosition === 'left' && item.iconSelected && item.checked }}"
          type="{{ item.iconSelected }}"
          color="{{ item.checked ? (item.iconSelectedColor ? item.iconSelectedColor : item.iconColor) : item.iconColor }}"
          size="{{ iconSize }}"
          class="left">
        </ui-icon>
        {{item.text}}
        <ui-icon
          wx:if="{{ iconPosition === 'right' && item.icon && !item.checked }}"
          type="{{ item.icon }}" 
          color="{{ item.checked ? (item.iconSelectedColor ? item.iconSelectedColor : item.iconColor) : item.iconColor }}"
          size="{{ iconSize }}"
          class="right">
        </ui-icon>
        <ui-icon 
          wx:if="{{ iconPosition === 'right' && item.iconSelected && item.checked }}"
          type="{{ item.iconSelected }}"
          color="{{ item.checked ? (item.iconSelectedColor ? item.iconSelectedColor : item.iconColor) : item.iconColor }}"
          size="{{ iconSize }}"
          class="right">
        </ui-icon>
      </view>
    </view>
  </view>
</template>

<script>
import StyleHelper from '../../libs/StyleHelper'
export default {
  config: {
    usingComponents: { }
  },
  behaviors: [ ],
  properties: { 
    data: {
      type: Array
    },
    fixedWidth: {
      type: Boolean
    },
    fixedMaxTextLength: {
      type: Number | String,
      value: 5
    },
    itemSpace: {
      type: Number | String,
      value: 10
    },
    mode: {
      type: String,
      value: 'single'
    },
    iconPosition: {
      type: String,
      value: 'left'
    },
    iconSize: {
      type: Number | String,
      value: 14
    },
    iconClass: {
      type: String,
      value: 'ui-tag-icon'
    },
    selectValue: {
      type: Array | Number | Object
    },
    minWidth: {
      type: Number | String
    },
    colNumber: {
      type: Number | String
    },
    width: {
      type: Number | String
    },
    itemWidth: {
      type: Number | String
    }
  },
  ready () {
    let query = wx.createSelectorQuery().in(this)
    query.select('.ui-tags').boundingClientRect((res) => {
      let count = this.getFixedColumnCount()
      this.setData({
        containerWidth: res.width,
        fixedColumnCount: count
      })

      this.init()
    }).exec()
  },
  data: { 
    fixedColumnCount: 0,
    containerWidth: 0,
    itemStyle: {}
  },
  methods: { 
    init () {
      let style = {}

      if (this.data.fixedWidth) {
        let avaWidth = this.data.containerWidth - this.data.itemSpace * (this.data.fixedColumnCount + 1)

        if (this.data.itemWidth) {
          style.width = this.data.itemWidth + 'px'
        } else {
          style.width = (avaWidth / this.data.fixedColumnCount) + 'px'
        }
        style.marginRight = this.data.itemSpace + 'px'
        style.marginLeft = 0
      }

      let plainStyle = StyleHelper.getPlainStyle(style)

      this.setData({
        itemStyle: plainStyle
      })
    },
    getFixedColumnCount () {
      if (this.data.colNumber) {
        return Number(this.data.colNumber)
      }
      return this.data.containerWidth > 360 ? 3 : 4
    },
    handleItemTap (e) {
      let index = e.currentTarget.dataset.index
      this.triggerEvent('change', { index: index })
    }
  }
}
</script>

<style lang="less">

.ui-tags {
  display: flex;
  flex-wrap: wrap;
}

.ui-tag-item {
  margin-bottom: 5px;
  margin-right: 5px;
  font-size: 14px;

  .ui-tag {
    padding: 0 5px;
    border-radius: 10px;
    text-align: center;
    height: 25px;
    display: flex;
    justify-content: center;
    align-items: center;
    line-height: 20px;
  }

  .ui-tag-icon {
    display:inline-block;
    width: 20px;
    height: 20px;
  }
  .corner {
    display:inline-block;
    width: 20px;
    height: 20px;
    border-radius: 5px;
    border-width: 1px;
    border-style: solid;
  }
  .left {
    margin-right: 5px;
  }
  .right {
    margin-left: 5px;
  }
}
</style>
